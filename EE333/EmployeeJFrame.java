/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EE333;

/**
 *
 * @author Josh Yates
 */
public class EmployeeJFrame extends javax.swing.JFrame {

    /**
     * Creates new form EmployeeJFrame
     */
    public EmployeeJFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelEmployeeLoginHeader = new javax.swing.JLabel();
        jButtonLogin = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabelID = new javax.swing.JLabel();
        jLabelPassword = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jPasswordField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelEmployeeLoginHeader.setText("                        Employee Login");

        jButtonLogin.setText("Login");
        jButtonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoginActionPerformed(evt);
            }
        });

        jLabelID.setText("ID:");

        jLabelPassword.setText("Password:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabelID, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabelPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelEmployeeLoginHeader, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonLogin)
                .addGap(18, 18, 18))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabelEmployeeLoginHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonLogin)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoginActionPerformed
        // This button handles employees logging in
         String id = this.jTextFieldID.getText();
         String password = String.valueOf(this.jPasswordField.getPassword());
         
         if(id != null && !id.equals("") && password != null && !password.equals(""))
         {
                String[] values = validateEmployeeId(id);
                if(values[0].equals("active") && password.equals(values[1]))
                {
                    //This is when we can login and move to new frame
                    //System.out.println("Employee is active and password was correct - test");
                    RegistrantJPanel jpanel = new RegistrantJPanel(id);
                    this.setContentPane(jpanel);
                    this.setSize(1250, 500);
                    this.setLocationRelativeTo(null);
                    this.setTitle("DMV Project");
                    this.validate();
                }
                else
                {
                    System.out.println("Username or password provided was incorrect");
                }
         }
         else
         {
             System.out.println("Both valid ID and Password must be provided in order to login...");
         }
        //Employee.importEmployeeInfo(id);
    }//GEN-LAST:event_jButtonLoginActionPerformed

    //This function validates if an employee is active or not
    public static String[] validateEmployeeId ( String id ) {
    
    String ID = "";
    String firstName = "";
    String lastName = "";
    Status status = EE333.Status.unknown;
    String password = "";
    String[] lines;        
    String[] chunks;
    String contents = "";
    String line;
    
    //System.out.println("Retriving employee info to validate");
    java.io.File inputFile;
    java.io.FileReader inputFileReader;
    java.io.BufferedReader inputBufferedReader;
    
    try {
            inputFile = new java.io.File("Employee\\" + id + ".txt");
            if (inputFile.exists() == true) {
            // want to continue
                inputFileReader = new java.io.FileReader(inputFile);
                inputBufferedReader = new java.io.BufferedReader(inputFileReader);
                    
                while ((line = inputBufferedReader.readLine()) != null) {
                contents += line + '\n';
                }
        
                inputBufferedReader.close();
                //System.out.println("EmployeeInfo imported successfully!");
        
                lines = contents.split("\n");
                for (int index = 0; index < lines.length; index++) {
                    chunks = lines[index].split(": ");
                    if (chunks.length == 2) {
                        if (chunks[0].compareToIgnoreCase("ID") == 0) {
                            //WE HAVE FOUND IT
                            ID = chunks[1];
                        } else if (chunks[0].compareToIgnoreCase("Password") == 0)
                        {
                            password = chunks[1];
                        }
                        else if (chunks[0].compareToIgnoreCase("firstName") == 0) {
                            firstName = chunks[1];
                        } else if (chunks[0].compareToIgnoreCase("lastName") == 0) {
                            lastName = chunks[1];
                        } else if (chunks[0].compareToIgnoreCase("status") == 0) {
                            try {
                                status = EE333.Status.valueOf( chunks[1]);
                            } catch (java.lang.IllegalArgumentException ex) {
                                status = EE333.Status.unknown;
                            }
                        } else {
                            //we ignore it
                        }
                    }  else {
                        //we ignore it
                    }
                }
                
            } else {
                // This means employee id does not exist in employees file system
                System.out.println("Employee does not exist. Please enter a valid employee id");
            }
        
        } catch (Exception ex) {
            System.out.println(ex.toString());
            //results = false;
        }
        
        String[] arr = new String[2];
        arr[0] = status.toString();
        arr[1] = password;
        return arr;
}
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLogin;
    private javax.swing.JLabel jLabelEmployeeLoginHeader;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JTextField jTextFieldID;
    // End of variables declaration//GEN-END:variables
}
